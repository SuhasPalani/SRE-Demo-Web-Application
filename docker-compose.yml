services:
  webapp:
    build:
      context: .
      dockerfile: Dockerfile.webapp
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    networks:
      - sre-network

  monitor:
    build:
      context: .
      dockerfile: Dockerfile.monitor
    volumes:
      - ./config:/app/config
      - ./logs:/app/logs
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - TARGET_SERVICE=webapp
      - CHECK_INTERVAL=10
    depends_on:
      webapp:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - sre-network

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 15s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - sre-network

networks:
  sre-network:
    driver: bridge
